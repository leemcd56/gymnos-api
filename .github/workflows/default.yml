name: Laravel with Postgresql
on:
  push:
    branches:
      - main
      - develop
      - features/**
      
  pull_request:
    branches:
      - main
      - develop

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB:  db_test_laravel
        ports:
          - 55432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: [ '8.2','8.1' ]
        dependency-stability: [ 'prefer-none' ]

    name: PHP ${{ matrix.php-versions }) (${{ matrix.operating-system}})

    steps:
    - uses: actions/checkout@v3
          
    - name: Build frontend
      run: npm run development
      
    - name: Install PHP versions
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        
    - name: Get Composer Cache Directory 2
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
        
    - uses: actions/cache@v3
      id: actions-cache
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
          
    - name: Cache PHP dependencies
      uses: actions/cache@v3
      id: vendor-cache
      with:
        path: vendor
        key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}
        
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      
    - name: Install Dependencies
      if: steps.vendor-cache.outputs.cache-hit != 'true'
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Update Dependencies with latest stable
      if: matrix.dependency-stability == 'prefer-stable'
      run: composer update --prefer-stable
      
    - name: Update Dependencies with lowest stable
      if: matrix.dependency-stability == 'prefer-lowest'
      run: composer update --prefer-stable --prefer-lowest

    - name: Generate key
      run: php artisan key:generate
      
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
      
    - name: Run Migrations
      env:
        DB_CONNECTION: pgsql
        DB_DATABASE: db_test_laravel
        DB_PORT: 55432
        DB_USERNAME: postgres
        DB_PASSWORD: postgres

      run: php artisan migrate

    - name: Show dir
      run: pwd
      
    - name: PHP Version
      run: php --version

    - name: Execute tests (Unit and Feature tests) via PestPHP
      env:
        DB_CONNECTION: pgsql
        DB_DATABASE: db_test_laravel
        DB_PORT: 55432
        DB_USERNAME: postgres
        DB_PASSWORD: postgres

      run: vendor/bin/pest


    - name: Execute Code Sniffer via phpcs
      run: |
        composer require --dev squizlabs/php_codesniffer
        vendor/bin/phpcs --standard=PSR12 app
